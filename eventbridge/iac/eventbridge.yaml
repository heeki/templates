AWSTemplateFormatVersion: '2010-09-09'
Description: EventBridge template
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Layers:
      - arn:aws:lambda:us-east-1:546275881527:layer:xray-python3:3
      - arn:aws:lambda:us-east-1:546275881527:layer:boto3-1-26-101:4
      - arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension:38
    MemorySize: !Ref pFnMemory
    Runtime: python3.11
    Timeout: !Ref pFnTimeout
    Tracing: Active
Parameters:
  pFnMemory:
    Type: Number
  pFnTimeout:
    Type: Number
  pBusName:
    Type: String
Resources:
  # EventBridge
  Bus:
    Type: AWS::Events::EventBus
    Properties:
      Name: !Ref pBusName
  Rule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: !Ref Bus
      EventPattern:
        detail:
          fleet_id: ["fleet-452"]
          vehicle_id: ["a42bb15c-43eb-11ec-81d3-0242ac130003"]
          tire_pressure: [{"numeric": ["<", 32]}]
      State: ENABLED
      Targets:
        - Id: lambda
          Arn: !GetAtt Fn.Arn
  # Lambda
  FnRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: cloudwatch-insights
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource: '*'
        - PolicyName: cloudwatch-logs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: 'arn:aws:logs:*:*:log-group:*:*'
        - PolicyName: xray
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                  - xray:GetSamplingRules
                  - xray:GetSamplingTargets
                  - xray:GetSamplingStatisticSummaries
                Resource: '*'
  Fn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../src/fn
      Handler: fn.handler
      Role: !GetAtt FnRole.Arn
  FnLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${Fn}'
      RetentionInDays: 7
  FnPerm:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Fn.Arn
      Principal: events.amazonaws.com
      Action: lambda:InvokeFunction
      SourceArn: !GetAtt Rule.Arn
Outputs:
  outFn:
    Value: !Ref Fn
  outBusArn:
    Value: !GetAtt Bus.Arn