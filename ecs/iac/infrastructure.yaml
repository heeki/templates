AWSTemplateFormatVersion: '2010-09-09'
Description: Infrastructure for an Fargate application
Transform: AWS::Serverless-2016-10-31
Parameters:
  pVpcId:
    Type: String
  pHostedZoneId:
    Type: String
  pDomainName:
    Type: String
  pClientIngressCidr:
    Type: String
  pSubnetIds:
    Type: List<String>
Resources:
  # ACM
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref pDomainName
      DomainValidationOptions:
        - DomainName: !Ref pDomainName
          HostedZoneId: !Ref pHostedZoneId
      ValidationMethod: DNS
  # Security Groups
  AppSGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ALB
      VpcId: !Ref pVpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref pClientIngressCidr
  TaskSGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for tasks
      VpcId: !Ref pVpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          SourceSecurityGroupId: !Ref AppSGroup
  # ALB
  AppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
        - !Ref AppSGroup
      Subnets: !Ref pSubnetIds
      Type: application
  AppListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: !Ref Certificate
      DefaultActions:
        - Order: 1
          TargetGroupArn: !Ref AppTargets
          Type: forward
      LoadBalancerArn: !Ref AppLB
      Port: 443
      Protocol: HTTPS
  AppTargets:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Matcher:
        HttpCode: 200
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: "/"
      HealthCheckPort: 8080
      HealthCheckProtocol: "HTTP"
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      Port: 8080
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref pVpcId
  # Route53
  AppAlias:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref pHostedZoneId
      Name: !Ref pDomainName
      ResourceRecords:
        - !GetAtt AppLB.DNSName
      TTL: 300
      Type: CNAME
  # ECR
  Repository:
    Type: AWS::ECR::Repository
Outputs:
  outCertificateArn:
    Value: !Ref Certificate
  outALBSGroup:
    Value: !Ref AppSGroup
  outTaskSGroup:
    Value: !Ref TaskSGroup
  outAppLB:
    Value: !Ref AppLB
  outAppLBDNSName:
    Value: !GetAtt AppLB.DNSName
  outAppTGroup:
    Value: !Ref AppTargets
  outRepository:
    Value: !Ref Repository